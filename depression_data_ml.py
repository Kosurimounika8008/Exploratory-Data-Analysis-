# -*- coding: utf-8 -*-
"""depression_data ml.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cl6VTzcR8EOfgGW85LkyAqbkHqrmLgFC
"""

data.head()
data.shape

import pandas as pd
import numpy as np
data=pd.read_csv("depression_data.csv",sep=",")
print(data)

data.shape

data.info()

##data cleaning process started
##handling missing values andknowing null values

np.sum(data.isnull())
data.tail()

data.isna()
## so wee understand by output that we have one row completly have null values

data['Marital Status'].value_counts()

data["Employment Status"].value_counts()

#first of all checking the perosns who have got depressed based on marital status
#so for that add anew colums so that we can know that how many members have been depreesd
'''data["depressed%"]=np.random.choice(["yes","no"],size=len(data))
print(data.head(100))'''

#deleting null values
data=data.dropna()
data.tail()

data.isna()

##data.drop("depressed%",axis=1,inplace=True)======> this is already runned couple of times so it doesnot work but we hve to use this to remove the coumn that we dontn want for further
data.head()

###transformation
#converting the float values into integer values for our clarification

print(data.dtypes)

##converting or transforming the float values into integer
data["Number of Children"]=pd.to_numeric(data["Number of Children"],errors="coerce")
print(data.dtypes)
#now that coululmn is in numeric value nowe we have to use astype() to convert it into integers
data["Number of Children"]=data["Number of Children"].astype("int64")
data.dtypes ## same applies to all float coulumns here as

data["Income"]=pd.to_numeric(data["Income"],errors="coerce")
data["Income"]=data["Income"].astype("int64")##completed of transforming float values into int values

data.head(100)## i did this again for the conformation of changing float into int or not

##checking outliers=>> outliers are the values which is far away from the mean
#firstly we have to import the following libraries
import matplotlib.pyplot as plt
import seaborn as sns
sns.boxplot(x=data["Income"])
plt.show()

###Scatter Plots: Reveal outliers that deviate significantly from the general trend between two variables.
plt.scatter(data["Sleep Patterns"],data["Chronic Medical Conditions"])
plt.xlabel("Sleep Patterns")
plt.ylabel("Chronic Medical Conditions")
plt.show()

##Histograms: Visualize the distribution of a single variable, making unusual data points stand out
plt.hist(data["Sleep Patterns"])
plt.xlabel("Sleep Patterns")
plt.ylabel("depressed")

##here people with less or poor sleep ha a more chance to get depresed

###finding outliers with stastical methods
from scipy import stats
z_scores=np.abs(stats.zscore(data["Income"]))
outliers=data["Income"][z_scores > 2]
print(outliers)

#removing outliers based on the z_scores
z_scores=np.abs(stats.zscore(data["Income"]))
data_filtered=data[(z_scores < 2)]
print(data_filtered)

#again seeing the outliers by using box plot
import matplotlib.pyplot as plt
import seaborn as sns
sns.boxplot(x=data["Income"])
plt.show()



#removing outliers or fixing outliers on the some of the columns
columns_to_filtered=["Income","Age"]
for column in columns_to_filtered:
    z_scores=np.abs(stats.zscore(data[column]))
    data=data[(z_scores <3)]
    print(data)

import matplotlib.pyplot as plt
import seaborn as sns
sns.boxplot(x=data["Income"])
plt.show()

from scipy import stats
z_scores=np.abs(stats.zscore(data["Number of Children"]))
outliers=data["Number of Children"][z_scores > 2]
print(outliers)
sns.boxplot(data["Number of Children"])
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
sns.boxplot(data["Number of Children"])
plt.show()#we dont have any outliers on number of childrens column

#fixing outliers with mean
from scipy import stats
z_scores=np.abs(stats.zscore(data["Number of Children"]))
threshold=3



#calculating mean values of non outliers values
column_to_fix="Age"
mean_values=data["Age"][z_scores < threshold].mean()
data["Age"]=np.where(z_scores >threshold,mean_values,data["Age"])
print(mean_values)
sns.boxplot(data["Age"])
plt.show()

##visualizatons
#preparing data
#extracting relevant columns
import matplotlib.pyplot as plt
categories=data['Alcohol Consumption']
values=data["Age"]

##grouing and aggregating the necessary columns
grouped_data=data.groupby("Alcohol Consumption")["Age"].sum()
categories=grouped_data.index
values=grouped_data.values
#now creating bar chart
plt.bar(categories,values)
plt.xlabel("Alcohol Consumption" )
plt.ylabel("Age")
plt.title("comp btw alcohol comsumption and age")
plt.show()

#now creating bar chart
plt.bar(categories,values)
plt.xlabel("Alcohol Consumption" )
plt.ylabel("Age")
plt.title("com btw marital and age")
plt.xticks(rotation=45,ha="right")
plt.show()

plt.plot(data["Smoking Status"],data["Employment Status"])
plt.xlabel("Smoking Status")
plt.ylabel("Employment Status")
plt.title("btw smoking and employment status")
plt.show()

plt.scatter(data["Smoking Status"],data["Employment Status"])
plt.xlabel("Smoking Status")
plt.ylabel("Employment Status")
plt.title("btw smoking and employment status")
plt.show()

plt.scatter(data["Dietary Habits"],data["Employment Status"])
plt.xlabel("Dietary Habits")
plt.ylabel("Employment Status")
plt.title("History of mental illnes and employment status")
plt.show()

plt.scatter(data["Income"], data["Employment Status"])
plt.xlabel("Income")
plt.ylabel("Employment Status")
plt.title("Relationship between income and Employment Status")
plt.show()

data['History of Mental Illness'] = data['History of Mental Illness'].replace({'Yes': 1, 'No': 0})
print(data)

relations=data["History of Mental Illness"].corr(data["History of Substance Abuse"])
print(relations)

data["History of Substance Abuse"]=data["History of Substance Abuse"].replace({"Yes":1,"No":0})
print(data)

data["History of Mental Illness"]=data["History of Mental Illness"].replace({"yes":1,"no":0})
print(data)

#knowing relationship between the columns
relations=data["History of Mental Illness"].corr(data["History of Substance Abuse"])
print(relations)

#knowing relationship between the columns
relations=data["History of Mental Illness"].corr(data["History of Substance Abuse"])
print(relations)

import matplotlib.pyplot as plt
plt.boxplot(data["Smoking Status"],data["Income"])
plt.xlabel("Smoking Status")
plt.ylabel("Income")
plt.show()

data["Income"]=pd.to_numeric(data["Income"],errors="coerce")


print(data)

import seaborn as sns
import matplotlib.pyplot as plt
new_var1 = plt.hist(data["Income"])
new_var2=plt.hist(data["Age"])
new_var1
new_var2

import seaborn as sns
import matplotlib.pyplot as plt
sns.histplot(data=data,x="Income",hue="Smoking Status")
plt.show()

sns.histplot(data=data,x="Age",hue="Sleep Patterns")
plt.show()

sns.histplot(data=data,x="Income",hue="Dietary Habits")
plt.show()

data["Marital Status"] = data["Marital Status"].replace({"Married": 1, "Single": 0})
print(data)

sns.histplot(data=data,x="Family History of Depression",hue="Marital Status")
plt.show()

sns.histplot(data=data,x="History of Mental Illness",hue="Marital Status")
plt.show()

sns.boxplot(data=data,x="Income",hue="Marital Status")
plt.show()

sns.violinplot(x="Employment Status", y="Income", data=data)

sns.scatterplot(data=data,x="Age",y="Income",hue="Marital Status")
plt.show()

sns.boxplot(data=data,x="Income",y="Age",hue="Marital Status")
plt.show()

import statsmodels.formula.api as sm
print(data)
model=sm.ols('Income ~ Age',data=data).fit()
print(model.summary())

##using ANOVA methhodEnsure that your "Employment Status" column is indeed a categorical variable. If it's currently a string column, try explicitly converting it to a categorical type using
import statsmodels.formula.api as sm
from statsmodels import stats
from statsmodels.stats.anova import anova_lm

model = sm.ols("Income ~ C(Age)", data=data).fit()#c is an optional
anova_table=anova_lm(model, typ=3)
print(anova_table)

from statsmodels import stats
data["Employment Status"] = pd.Categorical(data["Employment Status"])
import statsmodels.formula.api as sm

from statsmodels.stats.anova import anova_lm
model=sm.ols("Income ~ Employment Status",data=data).fit()
anova_table=anova_lm(models,typ=2)
print(anova_table)

print(data)

##using ANOVA methhodEnsure that your "Employment Status" column is indeed a categorical variable. If it's currently a string column, try explicitly converting it to a categorical type using
import pandas as pd
import numpy as np
import statsmodels.formula.api as sm
from statsmodels import stats
from statsmodels.stats.anova import anova_lm
data=pd.read_csv("depression_data.csv",sep=",")
model = sm.ols("Income ~ C(Age)",data=data).fit()#c is an optional
anova_table=anova_lm(model, typ=3)
print(anova_table)

